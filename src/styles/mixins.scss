@import './variables.scss';

// flex布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// 文本溢出省略
@mixin text-ellipsis($lines: 1) {
  @if $lines ==1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  @else {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $lines;
    overflow: hidden;
  }
}

// 响应式
@mixin respond-to($breakpoint) {
  @if $breakpoint ==xs {
    @media (max-width: $breakpoint-xs) {
      @content;
    }
  }

  @else if $breakpoint ==sm {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  }

  @else if $breakpoint ==md {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  }

  @else if $breakpoint ==lg {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  }

  @else if $breakpoint ==xl {
    @media (max-width: $breakpoint-xl) {
      @content;
    }
  }
}

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 阴影
@mixin box-shadow($level: 1) {
  @if $level ==1 {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.12);
  }

  @else if $level ==2 {
    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);
  }

  @else if $level ==3 {
    box-shadow: 0 2px 16px 0 rgba(0, 0, 0, 0.2);
  }
}
